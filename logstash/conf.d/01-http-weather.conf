#Edit the ip address of the arduino to suit.
input {
  http_poller {
    urls => {
      openweathermap => {
        method => get
        url => "http://api.openweathermap.org/data/2.5/weather?zip=ZIP,au&units=metric&appid=APIKEY"
        headers => {
          Accept => "application/json"
        }
      } 
      localweather => {
        method => get
        url => "http://ip_of_arduino"
        headers => {
          Accept => "application/json"
        }
      }
     }
    schedule => {cron => "*/5 * * * * UTC"}
    request_timeout => 60
    codec => "json"
  }
}
filter {
  # Classify requests that can't connect or have an unexpected response code
  if [http_request_failure] or [http_poller_metadata][code] != 200 {
     # Tag all these events as being bad
     mutate {
       add_tag => "bad_request"
     }
  mutate {
    convert => { "coord" => "geo_point"}
    convert => { "coordlocal" => "geo_point"}
    convert => { "dt" => "date"}
    convert => { "localdt" => "date"}
    convert => { "sunrise" => "date"}
    convert => { "sunset" => "date"}
  }
}
#  mutate {convert => ["sys.sunrise", "date"]}
#  mutate {convert => ["sys.sunset", "date"]}
#filter {
#  mutate {
#    convert => { "fieldname" => "integer" }
#  }
#}

}
output {
  elasticsearch {
    id => "weather_input"
    hosts => ["localhost:9200"]
    index => "weather-%{+YYYY-MM-dd}"
  }
  
}

